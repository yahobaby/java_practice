# Java 開発に必要なツール
①ソースコードの作成と編集
②コンパイルによる変換
③完成プログラムの実行

# PC にJavaの開発環境を構築する、代表的な3つの方法
・方式A
→ JDK 単体を用いる方法
→ JDK (Java Development Kit)というSWパッケージをPCにインストール
→ JDKとは、Java プログラム開発に必要な各種ツールやAPI ライブラリを詰め合わせたもの。
→ インタネットから入手可能
→ JDK インストールで、方式Bで必要なコンパイラや、方式Cで必要なインタプリタなどが利用できるようとなる。
→ 方式Aで必要となる代表製品に名称
*ソースコード作成(テキストエディタ):Atom、VSCなど
*コンパイル(Javaコンパイラ):javac (JDKに含まれる)
*実行(Javaインタプリタ):java(JDKに含まれる)
※ 方式Aのデメリット:ツールから必要最低限機能しか、提供できず、実務開発現場ではあまり常用されない。
※ 方式Aのメリット:シンプルで、軽量、Java自体の仕組みを深く理解するのに適してるので、教育研修で利用されることが多い。

・方式B
→ 方式Aの不便さの克服の為、統合開発環境(IDE Integrated Development Environment)というツールをPCに導入し、開発に利用する方法。
→ IDEとは、開発に必要な三つのツール(テキストエディタ・コンパイラ・インタプリタ)を一つにまとめて、単一ウィンドウで利用できるようにしたもの。
→ ソースコードを修正すると、自動的にコンパイルが実行される
→ コード整形やバグ検出など便利な機能が備えてる。
→ JavaのIDE として有名なのは、Eclipse や NetBeans, InteliJ IDEA がある。
→ IDEの多くは、コンパイルや実行の為に、内部でJDKを利用するが、JDKが同梱されているものを選ぶと、別途JDKを選ぶ必要はない。
→ 方式Aに比べたら利便性が大幅向上するが、より豊富な機能を備えた、方式Cがよく推奨される。

・方式C
→ プウラグイン追加済の IDE の利用
→ 多くの IDE には、様々な追加拡張機能(プラグイン)をインストールすることで、より効率的な開発ができるようになる。
→ 例えば、日本語表示、動作試験を簡単に行えるプラグインがあり、多数公開されてる。
→ プラグインを、IDE に個別セットアップすることも可能だが、手間がかかったり、相性が悪く、動かないこともある。
→ そこで、数多く便利なプラグイン設定済みの IDE を利用する方法が、方式Cである。
→ Eclipse に多くの便利プラグインを同梱した、Pleiades が広く使われてる。

Javaの の仕組みや原理をじっくりと学ぶには、方式A
短期で学習し、より実務に従事するには、方式C

